/**
 * ===== APP INITIALIZATION =====
 * –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –º–æ–¥—É–ª–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
 */

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
window.APP_CONFIG = {
    version: '2.0.0',
    debug: true,
    apiEndpoint: '/api',
    maxNotifications: 5,
    autoSaveInterval: 30000, // 30 —Å–µ–∫—É–Ω–¥
    windowAnimationDuration: 300,
    defaultWindowSize: { width: 320, height: 220 },
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
    modules: {
        notifications: {
            autoHide: true,
            duration: 5000,
            position: 'top-right'
        },
        windows: {
            enableDrag: true,
            enableResize: true,
            snapToGrid: false,
            gridSize: 10
        },
        operators: {
            refreshInterval: 60000, // 1 –º–∏–Ω—É—Ç–∞
            maxDisplayed: 100
        }
    }
};

/**
 * –ú–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥—É–ª–µ–π
 */
class AppInitializer {
    constructor() {
        this.modules = new Map();
        this.loadingPromises = new Map();
        this.initOrder = [
            'config',
            'notifications',
            'modals', 
            'windowState',
            'windowManager',
            'operatorManager',
            'operatorUI',
            'appManager'
        ];
        this.isInitialized = false;
    }

    /**
     * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥—É–ª—è
     */
    registerModule(name, moduleInstance) {
        if (this.modules.has(name)) {
            console.warn(`–ú–æ–¥—É–ª—å ${name} —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω`);
            return;
        }
        
        this.modules.set(name, moduleInstance);
        
        if (window.APP_CONFIG.debug) {
            console.log(`‚úì –ú–æ–¥—É–ª—å ${name} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω`);
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –º–æ–¥—É–ª—è –ø–æ –∏–º–µ–Ω–∏
     */
    getModule(name) {
        return this.modules.get(name);
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
     */
    checkModulesReady() {
        const requiredModules = this.initOrder;
        const missingModules = [];

        for (const moduleName of requiredModules) {
            if (!this.modules.has(moduleName)) {
                missingModules.push(moduleName);
            }
        }

        if (missingModules.length > 0) {
            console.error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –º–æ–¥—É–ª–∏:', missingModules);
            return false;
        }

        return true;
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
     */
    async initializeModules() {
        if (this.isInitialized) {
            console.warn('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
            return;
        }

        try {
            console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –º–æ–¥—É–ª–µ–π
            if (!this.checkModulesReady()) {
                throw new Error('–ù–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
            }

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
            for (const moduleName of this.initOrder) {
                const module = this.modules.get(moduleName);
                
                if (module && typeof module.init === 'function') {
                    console.log(`‚öôÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è: ${moduleName}`);
                    await module.init();
                } else {
                    console.warn(`–ú–æ–¥—É–ª—å ${moduleName} –Ω–µ –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥–∞ init()`);
                }
            }

            this.isInitialized = true;
            console.log('‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');

            // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ–± —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
            this.dispatchEvent('appReady');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
            this.dispatchEvent('appError', { error });
        }
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
     */
    dispatchEvent(eventName, data = {}) {
        const event = new CustomEvent(eventName, { 
            detail: { ...data, timestamp: Date.now() }
        });
        document.dispatchEvent(event);
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    getStatus() {
        return {
            initialized: this.isInitialized,
            modulesCount: this.modules.size,
            modules: Array.from(this.modules.keys()),
            version: window.APP_CONFIG.version
        };
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
window.AppInitializer = new AppInitializer();

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
window.showTrainingForm = function(errorId) {
    if (window.OperatorsManager) {
        window.OperatorsManager.showTrainingForm(errorId);
    }
};

window.saveTrainingComment = function(errorId) {
    if (window.OperatorsManager) {
        window.OperatorsManager.saveTrainingComment(errorId);
    }
};

window.cancelTrainingComment = function(errorId) {
    if (window.OperatorsManager) {
        window.OperatorsManager.cancelTrainingComment(errorId);
    }
};

window.editTrainingComment = function(errorId) {
    if (window.OperatorsManager) {
        window.OperatorsManager.editTrainingComment(errorId);
    }
};

// –ê–ª–∏–∞—Å—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
window.showCustomConfirm = function(title, message, confirmText, cancelText) {
    return ModalManager.showConfirm(title, message, confirmText, cancelText);
};

window.showNotification = function(message, type) {
    NotificationManager.show(message, type);
};
